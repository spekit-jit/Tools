      - name: Generate tools index + log
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const root = path.join('_site','tools');
            if (!fs.existsSync(root)) fs.mkdirSync(root, { recursive: true });

            // List _site/tools before generation
            const list = fs.existsSync(root) ? fs.readdirSync(root, { withFileTypes: true }) : [];
            core.info(`_site/tools entries: ${list.map(e=> (e.isDirectory()?'[D] ':'[F] ')+e.name).join(', ') || '(empty)'}`);

            // Direct files ending in .html/.htm (exclude index.html)
            const direct = list
              .filter(e => e.isFile() && /\.html?$/i.test(e.name) && !/^index\.html?$/i.test(e.name))
              .map(e => e.name)
              .sort((a,b) => a.localeCompare(b));

            // One-level subfolders that contain an index.html/htm
            const subidx = list
              .filter(e => e.isDirectory())
              .map(d => {
                const p1 = path.join(root, d.name, 'index.html');
                const p2 = path.join(root, d.name, 'index.htm');
                return (fs.existsSync(p1) || fs.existsSync(p2)) ? d.name : null;
              })
              .filter(Boolean)
              .sort((a,b) => a.localeCompare(b));

            core.info(`Direct HTML files: ${direct.length} -> ${direct.join(', ')}`);
            core.info(`Subfolder index dirs: ${subidx.length} -> ${subidx.join(', ')}`);

            const label = s => s.replace(/\.html?$/i,'');
            const hue = s => { let h=2166136261>>>0; for (const ch of s) { h ^= ch.charCodeAt(0); h = Math.imul(h,16777619)>>>0 } return h%360; };
            const grad = k => { const h=hue(k), h2=(h+24)%360; return `linear-gradient(180deg, hsl(${h} 75% 46%), hsl(${h2} 78% 44%))`; };
            const btn  = (href, text, key) => `<a class="tool" href="${href}" target="_blank" rel="noopener" style="background:${grad(key)}">${text} ✨</a>`;
            const buttons = [
              ...direct.map(f => btn(`/tools/${encodeURIComponent(f)}`, label(f), f)),
              ...subidx.map(d => btn(`/tools/${encodeURIComponent(d)}/`, d, d)),
            ].sort((a,b)=>a.localeCompare(b));

            const updated = new Date().toISOString().replace(/\.\d{3}Z$/,'Z');
            const html = `<!DOCTYPE html>
            <html lang="en"><head>
            <meta charset="utf-8" /><meta name="viewport" content="width=device-width,initial-scale=1" />
            <meta name="color-scheme" content="light dark" /><title>tools</title>
            <style>
            :root{ --bg:#0f1220; --panel:#14182a; --ink:#e9ecf8; --shadow:0 16px 40px rgba(0,0,0,.38) }
            @media (prefers-color-scheme: light){ :root{ --bg:#f6f7fb; --panel:#fff; --ink:#0f1426; --shadow:0 18px 40px rgba(12,24,60,.08) } }
            *{box-sizing:border-box} html,body{height:100%}
            body{margin:0;color:var(--ink);font-family:-apple-system,system-ui,Segoe UI,Roboto,Helvetica,Arial,Apple Color Emoji,Segoe UI Emoji;
                 background:radial-gradient(1200px 520px at 0% -10%, rgba(110,86,207,.25), transparent 60%),
                            radial-gradient(900px 360px at 110% 0%, rgba(69,231,179,.20), transparent 60%),var(--bg);
                 display:flex;align-items:stretch;justify-content:center}
            .board{width:100%;max-width:1100px;margin:16px;padding:16px;background:var(--panel);
                   border:1px solid rgba(255,255,255,.08);border-radius:18px;box-shadow:0 16px 40px rgba(0,0,0,.38)}
            .grid{display:grid;grid-template-columns:repeat(12,1fr);gap:12px}
            @media (max-width:980px){.grid{grid-template-columns:repeat(8,1fr)}}
            @media (max-width:640px){.grid{grid-template-columns:repeat(2,1fr)}}
            a.tool{grid-column:span 3;display:inline-flex;align-items:center;justify-content:center;text-decoration:none;text-align:center;
                   padding:14px 12px;min-height:56px;border-radius:14px;color:#fff;font-weight:700;letter-spacing:.2px;
                   border:1px solid rgba(255,255,255,.12);box-shadow:0 12px 26px rgba(0,0,0,.25);
                   transition:transform .06s,box-shadow .12s;word-break:break-word;backdrop-filter:saturate(110%)}
            @media (max-width:980px){a.tool{grid-column:span 4}} @media (max-width:640px){a.tool{grid-column:span 2}}
            a.tool:hover{transform:translateY(-1px);box-shadow:0 14px 30px rgba(0,0,0,.30)}
            .tiny{margin-top:10px;font:12px/1.3 ui-monospace,monospace;color:#9aa3bf;text-align:center;opacity:.85}
            </style></head>
            <body><div class="board"><div class="grid">
            ${buttons.join('')}
            </div><div class="tiny">Last updated: ${updated} • ${buttons.length} link(s)</div></div></body></html>`;

            fs.writeFileSync(path.join(root,'index.html'), html);
            core.info(`Wrote _site/tools/index.html with ${buttons.length} link(s)`)

      - name: Upload _site/tools for inspection
        uses: actions/upload-artifact@v4
        with:
          name: site-tools-folder
          path: _site/tools
